{"version":3,"sources":["logo.png","server.js","component/SelectAccount.js","Lang.js","App.js","component/contract.js","serviceWorker.js","index.js"],"names":["module","exports","host","Axios","api","bizData","pageData","callback","data","base","timestamp","sign","biz","page","axios","post","then","response","catch","error","_method","_params","id","jsonrpc","method","params","console","log","tmpPkr","Option","pullup","Pullup","setProvider","providers","HttpProvider","SelectAccount","props","handleOk","e","that","accounts","state","ac","MainPKr","selectAccount","hiddenAccount","handleCancel","onChange","v","accountOptions","this","getAccounts","res","local","accountList","dataArray","i","tmpArr","acName","Name","push","value","key","PK","setState","title","visible","onOk","onCancel","showSearch","style","width","placeholder","Component","Lang","zh_CN","project","contractAddress","balanceSero","account","utxo","contract","swith","estimatedTotal","dayIncome","staticIncome","withdraw","detail","referId","areaId","totalInvest","profitLevel","latestTime","totalReturn","totalReturnDay","recommend","staticIncomeTips","staticIncomeTips2","investDetail","myIncome","areaTotal","areaOtherTotal","staticReward","recommendReward","nobilityReward","vipReward","viewCode","button","deposit","invest","trigger","close","copy","modal","buyAsnow","amount","amountPlace","rate","exchange","password","passwordPlace","amountTips","availableHAPY","availableExchange","total","estimate","tips","toast","lessAmount","minInvest","tx","copySuccess","en_US","ct","address","abi","Language","Header","Content","Footer","ajax","ABI","serojs","callContract","decimal","BigNumber","pow","Countdown","openNotificationWithIcon","type","message","desc","notification","description","wordBreak","whiteSpace","wordWrap","duration","InvestForm","create","name","confirmLoading","estimateReturn","estimateLevel","setTimeout","totalAmount","plus","parseFloat","toFixed","sero","onCreate","form","getFieldDecorator","setFieldsValue","lang","layout","Item","label","rules","required","disabled","autoComplete","min","precision","max","step","staticTotal","allowClear","color","multipliedBy","React","ContentPage","currentAccount","showAccountSelect","loading","localStorage","setItem","window","location","reload","checked","showDeposit","handleInvestCancel","showInvest","handleInvestCreate","cb","formRef2","validateFields","err","values","amountSero","getFieldValue","ct_details","comparedTo","warn","executeMethod","toString","resetFields","calcuPrincipalProfit","seroHex","callMethod","saveInvestFormRef","formRef","showShareProfit","showWithdraw","modal1Visible","ct_balance_sero","ct_balanceOfSero","ct_rate","ct_id","getItem","showSelectAccount","getDetail","getContractBalance","getContractSeroBalance","setInterval","getAccount","pk","canvas","document","getElementById","QRCode","toCanvas","postSeroRpc","result","tkn","HAPY","dividedBy","accountDetail","strMap","Map","balanceObj","Balance","Object","keys","currency","set","identicon","largeAreaId","largeAreaTotal","returnAmount","achievement","recommendNum","parseInt","star","isKing","detailsOfIncome","calcuStaticProfit","args","packData","callParams","from","to","callData","call","unPackData","cy","executeData","gas_price","estimateParam","estimateGas","executeContract","accountName","staticTimestamp","salesPieData","x","y","showChart","countDown","d","Date","setTime","getTime","year","getUTCFullYear","month","getUTCMonth","day","getUTCDate","tz","getTimezoneOffset","nextShareTime","returnPercent","a","b","showCountDown","className","marginTop","padding","background","display","float","textAlign","span","onClick","dayProfit","suffix","format","onFinish","shareProfit","minus","height","percent","hasLegend","animate","subTitle","dangerouslySetInnerHTML","__html","reduce","pre","now","valueFormat","val","itemLayout","size","rowKey","avatar","Meta","shape","src","substring","count","valueStyle","dashed","dateTimestamp","cDate","appendZero","getMonth","getDate","getHours","getMinutes","convertUTCDate","footer","getContainer","success","wrappedComponentRef","App","changeLocale","localeValue","target","locale","zhCN","enUS","logo","Group","Button","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0ddc56c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.68dbff1b.png\";","import axios from 'axios';\n\nlet host = \"http://127.0.0.1:2345/\";\n\nclass Axios {\n\n    post(api, bizData, pageData, callback) {\n        let data = {\n            base: {\n                timestamp: 1234567,\n                sign: \"67ff54447b89f06fe4408b89902e585167abad291ec41118167017925e24e320\",\n            },\n            biz: bizData,\n            page: pageData,\n        }\n        axios.post(host + api, data).then(function (response) {\n            let data = response.data\n            if (callback) {\n                callback(data);\n            }\n        }).catch(function (error) {\n\n        })\n    }\n\n    postSeroRpc(_method, _params, callback) {\n        let data = {\n            id: 0,\n            jsonrpc: \"2.0\",\n            method: _method,\n            params: _params,\n        };\n        axios.post(host + \"rpc\", data).then(function (response) {\n            let data = response.data\n            if (callback) {\n                callback(data);\n            }\n        }).catch(function (error) {\n            console.log(\"req error: \",error)\n        })\n    }\n\n    postPullupRpc(_method, _params, callback) {\n        let data = {\n            id: 0,\n            method: _method,\n            params: _params,\n        };\n        axios.post(host + \"pullup_rpc\", data).then(function (response) {\n            let data = response.data\n            if (callback) {\n                callback(data);\n            }\n        }).catch(function (error) {\n\n        })\n    }\n\n}\n\nexport default Axios;","import React, {Component} from 'react'\nimport {Modal, Select} from \"antd\";\nimport Axios from \"../server\";\nimport Pullup from \"pullup-js-sdk\";\n\nlet tmpPkr = '';\nlet ajax = new Axios();\nconst {Option} = Select;\n\nvar pullup = new Pullup();\npullup.setProvider(new pullup.providers.HttpProvider('http://127.0.0.1:2345'));\n\nclass SelectAccount extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            accountOptions: [],\n            accounts: [],\n        }\n    }\n\n\n    componentDidMount() {\n        this.getAccounts();\n    }\n\n    handleOk = e => {\n        let that = this;\n        if (tmpPkr !== '') {\n            let accounts = that.state.accounts;\n            for (let ac of accounts) {\n                if (ac.MainPKr === tmpPkr) {\n                    that.props.selectAccount(ac);\n                }\n            }\n        }\n        that.props.hiddenAccount();\n    };\n\n    handleCancel = e => {\n        let that = this;\n        that.props.hiddenAccount();\n    };\n\n    onChange = (v) => {\n        tmpPkr = v;\n    }\n\n    getAccounts() {\n        let that = this;\n\n        let res = pullup.local.accountList()\n\n        if (res) {\n            let dataArray = res;\n            let i = 0;\n            let tmpArr = [];\n            for (let ac of dataArray) {\n                let acName = ac.Name;\n                i++\n                if (!acName){\n                    acName = \"Account\"+i;\n                }\n                tmpArr.push(<Option value={ac.MainPKr} key={i}>{acName+\" \"+ac.PK}</Option>)\n            }\n            that.setState({\n                accountOptions: tmpArr,\n                accounts: dataArray\n            })\n        }\n\n        // ajax.post(\"account/list\", {}, {}, function (res) {\n        //\n        //\n        // })\n    };\n\n    render() {\n        return (\n            <Modal\n                title=\"Select Account\"\n                visible={this.props.visible}\n                onOk={this.handleOk}\n                onCancel={this.handleCancel}\n            >\n                <Select showSearch\n                        style={{width: 450}}\n                        placeholder=\"Select an account\"\n                        onChange={(v) => {\n                            this.onChange(v);\n                        }}\n                >\n                    {this.state.accountOptions}\n                </Select>\n            </Modal>\n        )\n    }\n}\n\n\nexport default SelectAccount","class Lang {\n\n    zh_CN={\n        project:{\n            title:\"合约详情\",\n            contractAddress:\"合约地址\",\n            balanceSero:\"当前余额 (HAPY)\",\n        },\n\n        account:{\n            title:{\n                utxo:\"钱包账户\",\n                contract:\"合约账户\",\n                swith:\"切换账户\",\n                balanceSero:\"余额 (HAPY)\",\n                estimatedTotal:\"预计总收益 (HAPY)\",\n                dayIncome:\"当天返还比例\",\n                staticIncome:\"当天静态返还 (HAPY)\",\n                withdraw:\"可提现金额 (HAPY)\",\n                detail:\"详情\",\n                id:\"编号\",\n                referId:\"推荐人编号\",\n                areaId:\"大区编号\",\n                totalInvest:\"本金\",\n                profitLevel:\"收益倍数\",\n                latestTime:\"最新收益时间\",\n                totalReturn:\"当前返还总数(HAPY)\",\n                totalReturnDay:\"当天返还总数(HAPY)\",\n                recommend:\"下级人数\",\n                staticIncomeTips:\"今天的静态收益已经支付到可提现账户.\",\n                staticIncomeTips2:\"触发收益到提现账户.\",\n                investDetail:\"投资详情\",\n                myIncome:\"我的业绩\",\n                areaTotal:\"大区业绩\",\n                areaOtherTotal:\"业绩总和(不含大区)\",\n\n                staticReward:\"静态返还\",\n                recommendReward:\"推荐奖\",\n                nobilityReward:\"星级奖\",\n                vipReward:\"VIP奖\",\n                viewCode:\"查看智能合约\",\n\n            },\n            button:{\n                deposit:\"充值\",\n                invest:\"投资\",\n                trigger:\"触发收益\",\n                withdraw:\"提现\",\n                close:\"关闭\",\n                copy:\"拷贝\",\n            },\n            modal:{\n                deposit:{\n                    title:\"充值\",\n                    copy:\"拷贝\",\n                },\n\n                buyAsnow:{\n                    amount:\"数量 (HAPY)\",\n                    amountPlace:\"输入数量\",\n                    rate:\"兑换比例\",\n                    exchange:\"兑换\",\n                    password:\"账户密码\",\n                    passwordPlace:\"输入账户密码\",\n                },\n\n                invest:{\n                    title:\"投资\",\n                    referId:\"推荐人编号\",\n                    amount:\"投资金额\",\n                    amountTips:\"100 HAPY起投\",\n                    availableHAPY:\"可用的余额\",\n                    availableExchange:\"最多可抵用\",\n                    total:\"应付合计\",\n                    estimate:\"预计收益\",\n                    password:\"账户密码\",\n                    passwordPlace:\"输入账户密码\",\n                },\n\n                trigger:{\n                    password:\"账户密码\",\n                    passwordPlace:\"输入账户密码\",\n                },\n\n                withdraw:{\n                    password:\"账户密码\",\n                    passwordPlace:\"输入账户密码\",\n                    tips:\"* 提现金额将直接提到UTXO账户.\",\n                },\n            },\n        },\n        toast:{\n            lessAmount:\"HAPY余额不足以支付本次交易.\",\n            minInvest:\"最小投资金额为 100 HAPY.\",\n            tx:\"交易提交成功, 等待区块打包交易, 交易哈希: \",\n            copySuccess:\"拷贝成功! \",\n\n        }\n    };\n\n    en_US={\n        project:{\n            title:\"Contract Info\",\n            contractAddress:\"Contract Address\",\n            balanceSero:\"Current Balance (HAPY)\",\n        },\n\n        account:{\n            title:{\n                utxo:\"Wallet Account\",\n                contract:\"Contract Account\",\n                swith:\"Switch Account\",\n                balanceSero:\"Balance (HAPY)\",\n                estimatedTotal:\"Estimated Total Income (HAPY)\",\n                dayIncome:\"Return rate on the day\",\n                staticIncome:\"Static Return (HAPY)\",\n                withdraw:\"Withdrawal Account (HAPY)\",\n                detail:\"Detail\",\n                id:\"ID\",\n                referId:\"Refer ID\",\n                areaId:\"Large Area ID\",\n                totalInvest:\"Total Invest\",\n                profitLevel:\"Profit Level\",\n                latestTime:\"Latest Share Time\",\n                totalReturn:\"Total Return\",\n                totalReturnDay:\"Total return on the day (HAPY)\",\n                recommend:\"Recommend Number\",\n                staticIncomeTips:\"Your income have been paid to the withdrawal account.\",\n                staticIncomeTips2:\"Trigger to withdrawal account. \",\n                investDetail:\"Invest Info\",\n                myIncome:\"My performance\",\n                areaTotal:\"Regional performance\",\n                areaOtherTotal:\"Total performance (excluding the large region)\",\n\n                staticReward:\"Static\",\n                recommendReward:\"Recommend\",\n                nobilityReward:\"Nobility\",\n                vipReward:\"VIP\",\n                viewCode:\"View Smart Contract\",\n            },\n            button:{\n                deposit:\"Deposit HAPY\",\n                invest:\"Invest\",\n                trigger:\"Trigger Income\",\n                withdraw:\"Withdraw\",\n                close:\"Close\",\n                copy:\"Copy\",\n            },\n            modal:{\n                deposit:{\n                    title:\"Deposit\",\n                    copy:\"COPY\",\n                },\n\n                buyAsnow:{\n                    amount:\"Amount (HAPY)\",\n                    amountPlace:\"Input Amount\",\n                    rate:\"Exchange Rate\",\n                    exchange:\"Exchange\",\n                    password:\"Password\",\n                    passwordPlace:\"Input Password\",\n                },\n                invest:{\n                    title:\"Invest\",\n                    referId:\"Refer ID\",\n                    amount:\"Invet Amount\",\n                    amountTips:\"At least invest 100 HAPY\",\n                    availableHAPY:\"Available Blance\",\n                    availableExchange:\"Max Exchange\",\n                    total:\"Total\",\n                    estimate:\"Estimated Return\",\n                    password:\"Password\",\n                },\n\n                trigger:{\n                    password:\"Password\",\n                },\n\n                withdraw:{\n                    password:\"Password\",\n                    tips:\"* This is the withdrawal of the amount to the UTXO account.\",\n                },\n            },\n        },\n        toast:{\n            lessAmount:\"The balance is not enough to pay for this transaction.\",\n            minInvest:\"Invest Amount at least 100 HAPY.\",\n            tx:\"The transaction was submitted successfully, waiting for the block to be packaged, and the transaction hash: \",\n            copySuccess:\"Copy to clipboard successfully! \",\n        },\n    }\n}\n\nexport default Lang","import React, {Component} from 'react';\nimport {\n    Layout,\n    Skeleton,\n    Descriptions,\n    Divider,\n    notification,\n    List,\n    Tag,\n    Avatar,\n    Row,\n    Col,\n    Statistic,\n    Button,\n    Modal,\n    ConfigProvider,\n    Radio,\n    Input,\n    Rate,\n    message, Form, InputNumber\n} from \"antd\";\nimport {WaterWave, Pie} from 'ant-design-pro/lib/Charts';\nimport 'ant-design-pro/dist/ant-design-pro.css';\nimport SelectAccount from \"./component/SelectAccount\"\nimport Axios from \"./server\";\nimport BigNumber from \"bignumber.js\"\nimport serojs from \"serojs\"\nimport Pullup from \"pullup-js-sdk\"\n\nimport \"./App.css\"\nimport copy from \"copy-text-to-clipboard\";\nimport QRCode from \"qrcode\";\nimport logo from \"./logo.png\"\nimport enUS from 'antd/es/locale/en_US';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport Language from \"./Lang\"\nimport identicon from \"identicon.js\"\nimport Contract from \"./component/contract\"\n\nlet ct = new Contract();\nlet Lang = new Language();\nconst {Header, Content, Footer} = Layout;\n\nlet ajax = new Axios();\nlet contractAddress = ct.address;\nlet ABI = ct.abi;\n\nlet contract = serojs.callContract(ABI, contractAddress);\n\nlet decimal = new BigNumber(10).pow(18);\nconst {Countdown} = Statistic;\n\nvar pullup = new Pullup();\npullup.setProvider(new pullup.providers.HttpProvider('http://127.0.0.1:2345'));\n\nconst openNotificationWithIcon = (type, message, desc) => {\n    notification[type]({\n        message: message,\n        description: <p style={{wordBreak: 'normal', whiteSpace: 'pre-wrap', wordWrap: 'break-word'}}>{desc}</p>,\n        duration: null,\n    });\n};\n\n\nconst InvestForm = Form.create({name: 'form_in_modal2'})(\n    class extends React.Component {\n\n        state = {\n            confirmLoading: false,\n            estimateReturn: 0,\n            estimateLevel: 0,\n            amount: 0.000000,\n            total: 0.000000\n        }\n\n        staticTotal() {\n            let that = this;\n            setTimeout(function () {\n                let total = new BigNumber(that.state.amount);\n                let totalAmount=total.plus(that.props.totalAmount)\n\n                let estimateLevel = 0;\n                if(parseFloat(total)<100) {\n                } else if (parseFloat(totalAmount) >= 100 && parseFloat(totalAmount) < 12500) {\n                    estimateLevel = 3\n                } else if (parseFloat(totalAmount) >= 12500 && parseFloat(totalAmount) < 25000) {\n                    estimateLevel = 4\n                } else if (parseFloat(totalAmount) >= 25000) {\n                    estimateLevel = 5\n                }\n\n                that.setState({\n                    total: total.toFixed(6),\n                    estimateLevel: estimateLevel\n                })\n            }, 10)\n        }\n\n        render() {\n            const {visible, sero, onCancel, onCreate, form, referId} = this.props;\n            const {getFieldDecorator, setFieldsValue} = form;\n\n            setTimeout(function () {\n                if (referId && referId !== 0) {\n                    setFieldsValue({\"ReferId\": referId});\n                }\n            }, 100)\n\n            let that = this;\n            return (\n                <Modal\n                    visible={visible}\n                    title={Lang[that.props.lang].account.modal.invest.title}\n                    onCancel={onCancel}\n                    onOk={() => {\n                        this.setState({\n                            confirmLoading: true\n                        });\n                        setTimeout(function () {\n                            onCreate(function (res) {\n                                that.setState({\n                                    confirmLoading: res\n                                });\n                            });\n                        },10)\n                    }}\n                    confirmLoading={this.state.confirmLoading}\n                >\n                    <Form layout=\"vertical\">\n                        <Form.Item label={Lang[that.props.lang].account.modal.invest.referId}>\n                            {getFieldDecorator(`ReferId`, {\n                                rules: [{required: true, message: `Please Input Refer Id`}],\n                            })(<Input style={{width: '30%'}} disabled={!(!referId || referId === 0)}\n                                      placeholder={referId ? referId : \"\"} autoComplete=\"off\"/>)}\n                        </Form.Item>\n                        <Form.Item\n                            label={`${Lang[that.props.lang].account.modal.invest.amount} (Available Balance: ${sero} HAPY)`}>\n                            {getFieldDecorator('AmountSero', {\n                                rules: [{required: true, message: `Please Input Amount! `}],\n                            })(<InputNumber min={0} precision={6} max={parseFloat(sero)} step={100}\n                                            style={{width: '30%'}} onChange={(v) => {\n                                that.setState({amount: v});\n                                that.staticTotal();\n                            }} allowClear placeholder=\"0.000000\" autoComplete=\"off\"/>)} HAPY\n                            ({Lang[that.props.lang].account.modal.invest.amountTips})\n                        </Form.Item>\n                        <p>{Lang[that.props.lang].account.modal.invest.estimate}: <span\n                            style={{color: '#1DA57A'}}>{that.state.amount}</span> (HAPY) x <span\n                            style={{color: '#1DA57A'}}>{that.state.estimateLevel} </span>(Times) = <strong\n                            style={{color: 'rgb(216, 0, 38)'}}>{new BigNumber(that.state.amount).multipliedBy(that.state.estimateLevel).toFixed(6)} </strong>HAPY\n                        </p>\n\n                        <p>{Lang[that.props.lang].account.modal.invest.total} : <strong\n                            style={{color: 'rgb(216, 0, 38)'}}>{this.state.total}</strong> HAPY </p>\n                    </Form>\n                </Modal>\n            );\n        }\n    },\n);\n\nclass ContentPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            showAccountSelect: false,\n            showDeposit: false,\n            showInvest: false,\n            showShareProfit: false,\n            showWithdraw: false,\n\n            modal1Visible: false,\n\n            currentAccount: {},\n            balanceSero: 0,\n            ct_balance_sero: 0,\n            ct_balanceOfSero: 0,\n\n            ct_rate: 0,\n            ct_id: 0,\n            ct_details: {},\n\n            lang: \"zh_CN\",\n        }\n    }\n\n    componentWillMount() {\n        let lang = localStorage.getItem(\"lang\");\n        if (!lang) {\n            lang = \"zh_CN\";\n            localStorage.setItem(\"lang\", \"zh_CN\");\n        }\n        this.setState({\n            lang: lang,\n        })\n    }\n\n    componentDidMount() {\n        let that = this;\n        setTimeout(function () {\n            that.showSelectAccount();\n        }, 300);\n        if (!this.state.showAccountSelect) {\n            setTimeout(function () {\n                that.getDetail();\n                that.getContractBalance();\n                that.getContractSeroBalance();\n\n            }, 310)\n        }\n\n        setInterval(function () {\n            that.getDetail();\n            that.getContractBalance();\n            that.getContractSeroBalance();\n            if (that.state.currentAccount.PK) {\n                that.getAccount(that.state.currentAccount.PK)\n            }\n        }, 30000)\n    }\n\n    showSelectAccount() {\n\n        if (!this.state.currentAccount.PK) {\n            let pk = localStorage.getItem(\"accountPk\");\n            if (pk) {\n                this.getAccount(pk)\n                this.setState({\n                    loading: false\n                })\n            } else {\n                this.setState({\n                    showAccountSelect: true\n                })\n            }\n        }\n    }\n\n    showDeposit() {\n\n        this.setState({\n            showDeposit: true\n        })\n\n        let canvas = document.getElementById('qrImg')\n        QRCode.toCanvas(canvas, this.state.currentAccount.MainPKr, function (error) {\n            if (error) console.error(error)\n            console.log('success!');\n        })\n    }\n\n    selectAccount = ac => {\n        this.setState({\n            currentAccount: ac,\n            showAccountSelect: false,\n            loading: false\n        });\n        localStorage.setItem(\"accountPk\", ac.PK);\n        window.location.reload();\n\n    }\n\n    hiddenAccount = () => {\n        this.setState({\n            showAccountSelect: false,\n        });\n    }\n\n    onChange = checked => {\n        this.setState({loading: !checked});\n    };\n\n    getContractBalance() {\n        let that = this;\n        ajax.postSeroRpc(\"sero_getBalance\", [contractAddress, \"latest\"], function (res) {\n            let sero = new BigNumber(res.result.tkn.HAPY ? res.result.tkn.HAPY : \"0\", 16).dividedBy(decimal).toFixed(6);\n            that.setState({\n                ct_balance_sero: sero,\n            })\n        })\n    }\n\n    getContractSeroBalance() {\n        let that = this;\n        that.callMethod(\"balanceOfHAPY\", [], function (res) {\n            if (res) {\n                that.setState({\n                    ct_balanceOfSero: new BigNumber(res, 10).dividedBy(decimal).toFixed(6),\n                })\n            }\n        })\n    }\n\n    //pullup\n    getAccount(pk) {\n        let that = this;\n        let currentAccount = pullup.local.accountDetail(pk);\n        let strMap = new Map();\n        let balanceSero = 0;\n        let balanceObj = currentAccount.Balance;\n        for (var currency of Object.keys(balanceObj)) {\n            strMap.set(currency, balanceObj[currency]);\n            if (currency === 'HAPY') {\n                balanceSero = new BigNumber(balanceObj[currency]).dividedBy(decimal).toFixed(6);\n            }\n        }\n        let data = new identicon(pk, 200).toString();\n        currentAccount[\"avatar\"] = \"data:image/png;base64,\" + data;\n        that.setState({\n            currentAccount: currentAccount,\n            balanceSero: balanceSero,\n        });\n    }\n\n\n    //=== contract\n\n    getDetail() {\n        let that = this;\n        let res = that.callMethod(\"details\", []);\n        console.log(\"res:\",res);\n        let detail = {\n            referId: \"\",\n            largeAreaId: \"\",\n            largeAreaTotal: new BigNumber(\"0\").dividedBy(decimal).toFixed(6),\n            amount: new BigNumber(\"0\").dividedBy(decimal).toFixed(6),\n            returnAmount: new BigNumber(\"0\").dividedBy(decimal).toFixed(6),\n            achievement: new BigNumber(\"0\").dividedBy(decimal).toFixed(6),\n            recommendNum: parseInt(new BigNumber(\"0\").toString(10)),\n            profitLevel: parseInt(new BigNumber(\"0\").toString(10)),\n            value: new BigNumber(\"0\").dividedBy(decimal).toFixed(6),\n            star: parseInt(new BigNumber(\"0\").toString(10)),\n            isKing: false,\n        }\n        if (res!==\"0x0\"){\n            let data = res;\n            if(data){\n                detail = {\n                    referId: data[0] == 'JFVVW2ITNSJHF' ? \"\" : data[0],\n                    largeAreaId: data[1] == 'JFVVW2ITNSJHF' ? \"\" : data[1],\n                    largeAreaTotal: new BigNumber(data[2]).dividedBy(decimal).toFixed(6),\n                    amount: new BigNumber(data[3]).dividedBy(decimal).toFixed(6),\n                    returnAmount: new BigNumber(data[4]).dividedBy(decimal).toFixed(6),\n                    achievement: new BigNumber(data[5]).dividedBy(decimal).toFixed(6),\n                    recommendNum: parseInt(new BigNumber(data[6]).toString(10)),\n                    profitLevel: parseInt(new BigNumber(data[7]).toString(10)),\n                    value: new BigNumber(data[8]).dividedBy(decimal).toFixed(6),\n                    star: parseInt(new BigNumber(data[9]).toString(10)),\n                    isKing: data[10],\n                }\n            }\n        }\n\n        let id = that.callMethod(\"id\", []);\n        console.log(\"id:\",id);\n        detail[\"id\"] = (id == \"JFVVW2ITNSJHF\" ? \"\" : id);\n\n        let detailsOfIncome = that.callMethod(\"detailsOfIncome\", []);\n        detail[\"detailsOfIncome\"] = detailsOfIncome;\n\n        console.log(\"detailsOfIncome:\",detailsOfIncome)\n\n        let calcuStaticProfit = that.callMethod(\"calcuStaticProfit\", []);\n        detail[\"dayProfit\"] = new BigNumber(calcuStaticProfit).dividedBy(decimal).toFixed(6);\n\n        that.setState({\n            ct_details: detail\n        })\n    }\n\n    callMethod(_method, args, callback) {\n        let that = this;\n        // let param = [ABI, contractAddress, _method, args]\n\n        let packData = contract.packData(_method, args);\n        let callParams = {\n            from: that.state.currentAccount.MainPKr,\n            to: contractAddress,\n            data: packData\n        }\n        let callData = pullup.sero.call(callParams, \"latest\");\n        if(callData !== \"0x\"){\n            let res = contract.unPackData(_method, callData);\n            if (callback){\n                callback(res);\n            }else{\n                return res\n            }\n        }else{\n            return \"0x0\"\n        }\n    }\n\n    executeMethod(_method, args, value, cy, password, callback) {\n        let that = this;\n\n        let packData = contract.packData(_method, args);\n        let executeData = {\n            from: that.state.currentAccount.PK,\n            to: contractAddress,\n            value: \"0x\"+value,//HAPY\n            data: packData,\n            gas_price: \"0x\"+new BigNumber(\"1000000000\").toString(16),\n            cy:cy,\n        };\n        let estimateParam = {\n            from: that.state.currentAccount.MainPKr,\n            to: contractAddress,\n            value: \"0x\"+value,//HAPY\n            data: packData,\n            gas_price: \"0x\"+new BigNumber(\"1000000000\").toString(16),\n            cy:cy,\n        }\n        executeData[\"gas\"] = pullup.sero.estimateGas(estimateParam);\n\n        let res = pullup.local.executeContract(executeData)\n        if (callback) {\n            callback(res)\n        }\n    }\n\n\n    handleCancel = () => {\n        this.setState({\n            showDeposit: false\n        })\n    }\n\n    //====  buyAsnow begin\n    //====  buyAsnow end\n\n    //====  Invest begin\n    handleInvestCancel = () => {\n        this.setState({showInvest: false});\n    };\n\n    handleInvestCreate = (cb) => {\n        let that = this;\n        const {form} = this.formRef2.props;\n        form.validateFields((err, values) => {\n            if (err) {\n                if (cb) {\n                    cb(false)\n                }\n                return;\n            }\n            let amountSero = form.getFieldValue(\"AmountSero\");\n            let referId = form.getFieldValue(\"ReferId\");\n            let password = form.getFieldValue(\"Password\");\n\n\n            if (that.state.ct_details.referId) {\n                referId = that.state.ct_details.referId;\n            }\n            if (new BigNumber(amountSero).comparedTo(new BigNumber(this.state.balanceSero)) > 0) {\n                if (cb) {\n                    cb(false)\n                }\n                message.warn(Lang[that.state.lang].toast.lessAmount);\n            }  else if (parseFloat(amountSero) < 100) {\n                if (cb) {\n                    cb(false)\n                }\n                message.warn(Lang[that.state.lang].toast.minInvest);\n            } else {\n                try {\n                    this.executeMethod(\"invest\", [referId], new BigNumber(amountSero).multipliedBy(decimal).toString(16), \"HAPY\", password, function (res) {\n                        if (res) {\n                            form.resetFields();\n                            that.setState({showInvest: false});\n                            setTimeout(function () {\n                                openNotificationWithIcon('success', 'Successful', `${Lang[that.state.lang].toast.tx}${res}`)\n                            }, 3000)\n                        }\n                        if (cb) {\n                            cb(false)\n                        }\n                    });\n                } catch (err) {\n                    if (err) {\n                        message.error(err.message);\n                    } else {\n                        message.error(\"request HAPY Node error:[\" + err.message+ \"]\");\n                    }\n                    if (cb) {\n                        cb(false)\n                    }\n                }\n            }\n        });\n    };\n\n    calcuPrincipalProfit = (sero, cb) => {\n        if (sero) {\n            let seroHex = \"0x\" + new BigNumber(sero).multipliedBy(decimal).toString(16);\n            this.callMethod(\"calcuPrincipalProfit\", [seroHex], function (res) {\n                if (cb) {\n                    cb(res);\n                }\n            })\n        }\n    }\n\n    saveInvestFormRef = formRef => {\n        this.formRef2 = formRef;\n    };\n\n    //====  Invest end\n\n    shareProfit() {\n        let that = this;\n        try {\n            this.executeMethod(\"triggerStaticProfit\", [], \"0\", \"HAPY\", '', function (res) {\n                if (res) {\n                    openNotificationWithIcon('success', 'Successful', `${Lang[that.state.lang].toast.tx}${res}`)\n                } else {\n                    if (res.error) {\n                        message.error(res.error.message);\n                    } else {\n                        message.error(\"request HAPY Node error:[\" + res + \"]\");\n                    }\n                }\n            });\n        } catch (err) {\n            if (err) {\n                message.error(err.message);\n            } else {\n                message.error(\"request HAPY Node error:[\" + err.message+ \"]\");\n            }\n        }\n\n    }\n\n    withdraw() {\n        let that = this;\n        try {\n            this.executeMethod(\"withdrawBalance\", [], \"0\", \"HAPY\", '', function (res) {\n                if (res) {\n                    openNotificationWithIcon('success', 'Successful', `${Lang[that.state.lang].toast.tx}${res}`)\n                } else {\n                    if (res.error) {\n                        message.error(res.error.message);\n                    } else {\n                        message.error(\"request HAPY Node error:[\" + res + \"]\");\n                    }\n                }\n            });\n        } catch (err) {\n            if (err) {\n                message.error(err.message);\n            } else {\n                message.error(\"request HAPY Node error:[\" + err.message+ \"]\");\n            }\n        }\n    }\n\n\n    //==== Buy Ticket begin\n\n    //==== Buy Ticket end\n\n    render() {\n        const {loading, showAccountSelect, currentAccount} = this.state;\n        let accountName = currentAccount.PK;\n        let that = this;\n        let staticReward = that.state.ct_details.detailsOfIncome ? new BigNumber(that.state.ct_details.detailsOfIncome[0]).dividedBy(decimal).toFixed(2) : 0;\n        let recommendReward = that.state.ct_details.detailsOfIncome ? new BigNumber(that.state.ct_details.detailsOfIncome[1]).dividedBy(decimal).toFixed(2) : 0;\n        let nobilityReward = that.state.ct_details.detailsOfIncome ? new BigNumber(that.state.ct_details.detailsOfIncome[2]).dividedBy(decimal).toFixed(2) : 0;\n        let vipReward = that.state.ct_details.detailsOfIncome ? new BigNumber(that.state.ct_details.detailsOfIncome[3]).dividedBy(decimal).toFixed(2) : 0;\n        // let currentIncome = that.state.ct_details.detailsOfIncome?new BigNumber(that.state.ct_details.detailsOfIncome[4]).dividedBy(decimal).toFixed(2):0;\n        let staticTimestamp = that.state.ct_details.detailsOfIncome ? that.state.ct_details.detailsOfIncome[5] : 0;\n\n        const salesPieData = [\n            {\n                x: Lang[this.state.lang].account.title.staticReward,\n                y: parseFloat(staticReward),\n            },\n            {\n                x: Lang[this.state.lang].account.title.recommendReward,\n                y: parseFloat(recommendReward),\n            },\n            {\n                x: Lang[this.state.lang].account.title.nobilityReward,\n                y: parseFloat(nobilityReward),\n            },\n            {\n                x: Lang[this.state.lang].account.title.vipReward,\n                y: parseFloat(vipReward),\n            },\n\n        ];\n\n        const showChart = parseFloat(staticReward) > 0 || parseFloat(recommendReward) > 0 || parseFloat(nobilityReward) > 0 || parseFloat(vipReward) > 0\n\n        const countDown = nextShareTime();\n        let totalReturnDay = this.state.ct_balanceOfSero ? new BigNumber(this.state.ct_balanceOfSero).dividedBy(30).toFixed(6) : \"0\";\n        let returnPercent = 0;\n        if (this.state.ct_details.returnAmount && parseFloat(this.state.ct_details.returnAmount) > 0) {\n            let a = parseFloat(this.state.ct_details.returnAmount);\n            let b = new BigNumber(this.state.ct_details.amount).multipliedBy(this.state.ct_details.profitLevel).toString(10);\n            returnPercent = (a * 100 / parseFloat(b)).toFixed(2);\n        }\n\n        let showCountDown = new Date(staticTimestamp * 1000).getUTCDate() === parseInt(new Date().getUTCDate());\n        // test\n        //let showCountDown = Math.floor(staticTimestamp /600) === Math.floor(new Date().getTime()/(1000*600));\n        return (\n            <div className=\"App\" style={{marginTop: '80px'}}>\n\n                <Content style={{padding: '0 50px'}}>\n                    <div style={{background: '#fff', width:'100%', padding: 24, display: 'inline-block'}}>\n\n                        <div style={{float:'left',width:\"40%\"}}>\n                            <Skeleton loading={loading}>\n                                <Descriptions title={<h1>{Lang[this.state.lang].account.title.contract}</h1>}/>\n\n\n                                <Row style={{textAlign: 'center'}}>\n\n\n                                    <Col span={12}>\n                                        <Statistic title={Lang[this.state.lang].account.title.estimatedTotal}\n                                                   value={new BigNumber(this.state.ct_details.amount ? this.state.ct_details.amount : 0).multipliedBy(this.state.ct_details.profitLevel ? this.state.ct_details.profitLevel : 0).toFixed(6)}\n                                                   precision={6}/>\n                                        <Button style={{marginTop: 16}} type=\"primary\" onClick={() => {\n                                            this.setState({showInvest: true})\n                                        }}>{Lang[this.state.lang].account.button.invest}</Button>\n                                    </Col>\n                                    <Col span={12}>\n                                        <Statistic title={Lang[this.state.lang].account.title.totalReturnDay}\n                                                   value={totalReturnDay} precision={6}/>\n                                    </Col>\n                                </Row>\n                                <Row style={{textAlign: 'center'}}>\n\n                                    <Col span={12}>\n                                        <Statistic title={Lang[this.state.lang].account.title.dayIncome}\n                                                   value={this.state.ct_details.dayProfit&&parseFloat(totalReturnDay)>0 ? new BigNumber(this.state.ct_details.dayProfit).multipliedBy(100).dividedBy(totalReturnDay).toFixed(2) : \"0\"}\n                                                   suffix={\"%\"}/>\n                                    </Col>\n\n                                </Row>\n                                <Row style={{textAlign: 'center'}}>\n\n\n                                    <Col span={12}>\n                                        <Statistic title={Lang[this.state.lang].account.title.staticIncome}\n                                                   value={this.state.ct_details.dayProfit} precision={6}/>\n                                        {\n                                            showCountDown ?\n                                                <Countdown style={{marginTop: 14}} title=\"\" format=\"HH:mm:ss\"\n                                                           value={parseFloat(countDown)} onFinish={() => {\n                                                    this.getDetail()\n                                                }}/> : <Button style={{marginTop: 16}} type=\"primary\"\n                                                               disabled={showCountDown} onClick={() => {\n                                                    this.shareProfit()\n                                                }}>{Lang[this.state.lang].account.button.trigger}</Button>\n                                        }\n                                    </Col>\n                                    <Col span={12}>\n                                        <Statistic title={Lang[this.state.lang].account.title.areaTotal}\n                                                   value={this.state.ct_details.largeAreaTotal} precision={6}/>\n                                    </Col>\n\n                                </Row>\n                                <Row style={{textAlign: 'center'}}>\n                                    <Col span={12}>\n                                        <Statistic title={Lang[this.state.lang].account.title.withdraw}\n                                                   value={new BigNumber(this.state.ct_details.value ? this.state.ct_details.value : 0).toFixed(6)}\n                                                   precision={6}/>\n                                        <Button style={{marginTop: 16}} disabled={new BigNumber(this.state.ct_details.value ? this.state.ct_details.value : 0).comparedTo(0) < 1} type=\"primary\" onClick={() => {\n                                            this.withdraw()\n                                        }}>{Lang[this.state.lang].account.button.withdraw}</Button>\n                                    </Col>\n                                    <Col span={12}>\n                                        <Statistic title={Lang[this.state.lang].account.title.areaOtherTotal}\n                                                   value={new BigNumber(this.state.ct_details.achievement).minus(new BigNumber(this.state.ct_details.largeAreaTotal)).toFixed(6)}\n                                                   precision={6}/>\n                                    </Col>\n                                </Row>\n                                {\n                                    showChart ?\n                                        <Row>\n                                            <Col span={24} style={{textAlign: 'center'}}>\n                                                <div>\n                                                    {returnPercent > 0 ? <WaterWave height={234}\n                                                                                    title={Lang[this.state.lang].account.title.totalReturn}\n                                                                                    percent={returnPercent}/> :\n                                                        <WaterWave height={234}\n                                                                   title={Lang[this.state.lang].account.title.totalReturn}\n                                                                   percent={0}/>}\n                                                </div>\n                                            </Col>\n                                            <Col span={24} style={{textAlign: 'left'}}>\n                                                <Pie\n                                                    hasLegend\n                                                    animate\n                                                    title={Lang[this.state.lang].account.title.totalReturn}\n                                                    subTitle={Lang[this.state.lang].account.title.totalReturn}\n                                                    total={() => (\n                                                        <span\n                                                            dangerouslySetInnerHTML={{\n                                                                __html: salesPieData.reduce((pre, now) => now.y + pre, 0),\n                                                            }}\n                                                        />\n                                                    )}\n                                                    data={salesPieData}\n                                                    valueFormat={val => <span\n                                                        dangerouslySetInnerHTML={{__html: val}}/>}\n                                                    height={248}\n                                                />\n                                            </Col>\n                                        </Row> : \"\"\n                                }\n                            </Skeleton>\n                        </div>\n                        <div style={{float:'left',width:\"60%\"}}>\n                            <List itemLayout=\"vertical\" size=\"large\" rowKey=\"1\">\n                                <List.Item>\n                                    <Skeleton loading={loading} avatar>\n                                        <Descriptions title={<h1>{Lang[this.state.lang].account.title.contract}</h1>}/>\n                                        <Descriptions title={\n                                            <h1>{Lang[this.state.lang].account.title.utxo} <Button size=\"small\"\n                                                                                                   onClick={() => {\n                                                                                                       this.setState({\n                                                                                                           showAccountSelect: true\n                                                                                                       })\n                                                                                                   }}>{Lang[this.state.lang].account.title.swith}</Button>\n                                            </h1>}/>\n                                        <Row>\n                                            <Col span={12}>\n                                                <List.Item.Meta\n                                                    avatar={<p><Avatar shape=\"square\" size={64}\n                                                                       src={currentAccount.avatar}/></p>}\n                                                    title={\n                                                        <small>{accountName ? accountName.substring(0, 30) + \"...\" : \"\"}{this.state.ct_details.isKing ?\n                                                            <Tag color=\"gold\">VIP</Tag> : \"\"}</small>}\n                                                    description={<Rate count={4}\n                                                                       value={this.state.ct_details.star ? this.state.ct_details.star : 0}\n                                                                       disabled/>}\n                                                />\n                                            </Col>\n                                            <Col span={12} style={{textAlign:'center'}}>\n                                                <Statistic title={Lang[this.state.lang].account.title.balanceSero}\n                                                           value={this.state.balanceSero} precision={6}/>\n                                                <Button style={{marginTop: 16}} type=\"primary\" onClick={() => {\n                                                    this.showDeposit()\n                                                }}>{Lang[this.state.lang].account.button.deposit}</Button>\n                                            </Col>\n                                        </Row>\n\n                                    </Skeleton>\n                                </List.Item>\n\n\n                                <List.Item>\n                                    <Skeleton loading={loading}>\n                                        <Descriptions title={<h1>{Lang[this.state.lang].project.title}</h1>}>\n                                            <Descriptions.Item label={Lang[this.state.lang].project.contractAddress}>\n                                                <small>{contractAddress}</small>\n                                            </Descriptions.Item>\n                                        </Descriptions>\n\n                                        <Row>\n                                            <Col span={8}>\n                                                <Statistic title={Lang[this.state.lang].project.rate}\n                                                           value={this.state.ct_rate} precision={2}\n                                                           valueStyle={{color: '#3f8600'}}/>\n                                            </Col>\n                                        </Row>\n                                        <Divider dashed={true}/>\n                                        <Descriptions title={Lang[this.state.lang].account.title.investDetail}>\n                                            <Descriptions.Item\n                                                label={Lang[this.state.lang].account.title.id}>{this.state.ct_details.id}</Descriptions.Item>\n                                            <Descriptions.Item\n                                                label={Lang[this.state.lang].account.title.referId}>{this.state.ct_details.referId}</Descriptions.Item>\n                                            <Descriptions.Item\n                                                label={Lang[this.state.lang].account.title.areaId}>{this.state.ct_details.largeAreaId}</Descriptions.Item>\n                                            <Descriptions.Item\n                                                label={Lang[this.state.lang].account.title.totalInvest}>{this.state.ct_details.amount}</Descriptions.Item>\n                                            <Descriptions.Item\n                                                label={Lang[this.state.lang].account.title.profitLevel}>{this.state.ct_details.profitLevel}</Descriptions.Item>\n                                            <Descriptions.Item\n                                                label={Lang[this.state.lang].account.title.latestTime}>{convertUTCDate(staticTimestamp)}</Descriptions.Item>\n                                        </Descriptions>\n                                    </Skeleton>\n                                </List.Item>\n\n                            </List>\n                        </div>\n\n                    </div>\n                </Content>\n\n                <SelectAccount visible={showAccountSelect} selectAccount={this.selectAccount}\n                               hiddenAccount={this.hiddenAccount}/>\n\n                <Modal\n                    title={Lang[this.state.lang].account.modal.deposit.title}\n                    visible={this.state.showDeposit}\n                    onCancel={this.handleCancel}\n                    footer={null}\n                    getContainer={false}\n                >\n                    <div style={{textAlign: \"center\"}}>\n                        <canvas id=\"qrImg\"></canvas>\n                        <p style={{wordBreak: 'normal', whiteSpace: 'pre-wrap', wordWrap: 'break-word'}}>\n                            <small>{this.state.currentAccount.MainPKr}</small></p>\n                        <Button className='copyTxt' onClick={() => {\n                            copy(this.state.currentAccount.MainPKr);\n                            message.success('Copy to clipboard successfully');\n                        }}>{Lang[this.state.lang].account.modal.deposit.copy}</Button>\n                    </div>\n                </Modal>\n\n                <InvestForm\n                    wrappedComponentRef={this.saveInvestFormRef}\n                    visible={this.state.showInvest}\n                    onCancel={this.handleInvestCancel}\n                    onCreate={this.handleInvestCreate}\n                    sero={this.state.balanceSero}\n                    calcuPrincipalProfit={this.calcuPrincipalProfit}\n                    rate={this.state.ct_rate}\n                    lang={this.state.lang}\n                    totalAmount={this.state.ct_details.amount}\n                    referId={this.state.ct_details.referId}\n                />\n\n            </div>\n        );\n    }\n}\n\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            locale: zhCN,\n        };\n    }\n\n    componentWillMount() {\n        let lang = localStorage.getItem(\"lang\");\n        let locale = zhCN;\n        if (lang) {\n            if (lang === \"zh_CN\") {\n                locale = zhCN;\n            } else if (lang === \"en_US\") {\n                locale = enUS;\n            }\n        } else {\n            locale = zhCN;\n            localStorage.setItem(\"lang\", \"zh_CN\");\n        }\n\n        this.setState({\n            locale: locale\n        })\n    }\n\n    changeLocale = e => {\n        const localeValue = e.target.value;\n        this.setState({locale: localeValue});\n        console.log(localeValue.locale);\n        if (localeValue.locale === \"en\") {\n            localStorage.setItem(\"lang\", \"en_US\");\n        } else if (localeValue.locale === \"zh-cn\") {\n            localStorage.setItem(\"lang\", \"zh_CN\");\n        }\n    };\n\n    render() {\n        const {locale} = this.state;\n        return (\n            <div className=\"App\">\n                <Layout className=\"layout\">\n                    <Header className=\"header\">\n                        <div className=\"logo\"><img src={logo}/></div>\n                        <h1>HAPY</h1>\n                        <div className=\"change-locale\">\n                            <Radio.Group value={locale} onChange={this.changeLocale}>\n                                <Radio.Button key=\"en\" value={enUS}>\n                                    English\n                                </Radio.Button>\n                                <Radio.Button key=\"cn\" value={zhCN}>\n                                    中文\n                                </Radio.Button>\n                            </Radio.Group>\n                        </div>\n                    </Header>\n                    <ConfigProvider locale={locale}>\n                        <ContentPage key={locale ? locale.locale : 'en'}/>\n                    </ConfigProvider>\n                    <Footer style={{textAlign: 'center'}}/>\n                </Layout>\n            </div>\n        );\n    }\n}\n\nfunction convertUTCDate(dateTimestamp) {\n    if (dateTimestamp && dateTimestamp > 0) {\n        let cDate = new Date(dateTimestamp * 1000);\n        return appendZero(cDate.getMonth() + 1) + \"/\" + appendZero(cDate.getDate()) + \" \" + appendZero(cDate.getHours()) + \":\" + appendZero(cDate.getMinutes());\n    }\n    return \"\"\n}\n\nfunction nextShareTime() {\n    // test\n    //return (Math.floor(new Date().getTime()/(10*60*1000))+1)*10*60*1000;\n    let d = new Date();\n    d.setTime(d.getTime() + 24 * 60 * 60 * 1000);\n    let year = d.getUTCFullYear();\n    let month = d.getUTCMonth();\n    let day = d.getUTCDate();\n    d = new Date(year, month, day, 0, 0, 0);\n\n    let tz = new Date().getTimezoneOffset() / 60;\n    return d.getTime() + (-tz) * 60 * 60 * 1000;\n}\n\nfunction appendZero(i) {\n    i = i < 10 ? \"0\" + i : i;\n    return i;\n}\n\nexport default App;\n\n","class Contract{\n\n    address = \"54uf2UU9Zf1mgyR25WFpogyMfkgQRJZJKzY6Rfy3nygmjSoBXFE6R8y2RyCeCc1T6aEmaKK8W3Gu6SY8KdTq54x9\";\n\n    abi = [{\"constant\":true,\"inputs\":[],\"name\":\"preTotalShare\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalShare\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"refereeCode\",\"type\":\"string\"}],\"name\":\"invest\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"detailsOfIncome\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"triggerStaticProfit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenName\",\"type\":\"string\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preRewardAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setMarketAddr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"details\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint8\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"registerNode\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"findAddrById\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INVEST_CURRENCY\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"calcuStaticProfit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"code\",\"type\":\"string\"}],\"name\":\"codeExist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balanceOfHAPY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastUpdated\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_triggerStaticNum\",\"type\":\"uint256\"}],\"name\":\"setTriggerStaticNum\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_marketAddr\",\"type\":\"address\"},{\"name\":\"_codeServiceAddr\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}];\n\n\n}\n\nexport default Contract","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}